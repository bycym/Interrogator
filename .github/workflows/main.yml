name: CI for Interrogator

# on: [push, pull_request]

on:
  push:     
    branches:
      - main
  pull_request: 
    types: [opened, synchronize, reopened, closed]
    
env:
  BUILD_TYPE: Release
#   ACTIONS_RUNNER_DEBUG: true
#   ACTIONS_STEP_DEBUG: true


jobs:
  ci:
    runs-on: ${{ matrix.os }}
    strategy: 
      matrix:
        # os: [windows-2019, macos-10.15]
#         os: [windows, mac, linux]
        os: [mac]
        # os: [ubuntu-20.04, ubuntu-18.04, windows-2019, macos-10.15]
        # version: ['5.9.0', '5.15.1', '6.2.0']
        version: ['5.9.0']

        # Ubuntu 18 is not a supported target for Qt 6: https://www.qt.io/blog/qt6-development-hosts-and-targets
        exclude:
          - os: ubuntu-18.04
            version: '6.2.0'
    steps:
      - uses: actions/checkout@v2

      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: ${{matrix.version}}
          host: ${{ matrix.os }}
          target: 'desktop'
          # arch: 'win64_mingw73'
          dir: '${{github.workspace}}/qt/'
          install-deps: 'true'

      - name: Configure test project on windows
        if: startsWith(matrix.os, 'windows')
        env:
          QT_VERSION: ${{ matrix.version }}
        run: |
          cd tests/TestWithModules
          call "%programfiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          IF "%QT_VERSION:~0,1%"=="5" ( dir %Qt5_DIR%\lib\cmake ) ELSE ( dir %Qt6_DIR%\lib\cmake )
          qmake
        shell: cmd

      - name: Configure test project on unix
        if: (!startsWith(matrix.os, 'windows'))
        env:
          QT_VERSION: ${{ matrix.version }}
        run: |
          cd tests/TestWithModules
          if [[ $QT_VERSION == 6* ]]; then
            ls "$Qt6_DIR/lib/cmake"
          else
            ls "$Qt5_DIR/lib/cmake"
          fi
          qmake
        shell: bash
        
        
      #- name: Configure CMake
#       #  run: cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -B '${{github.workspace}}'
#       run: cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_PREFIX_PATH="${{env.Qt5_Dir}}/lib/cmake/" -DQt5_DIR=${{env.Qt5_Dir}}/lib/cmake/Qt5/ -G "CodeBlocks - MinGW Makefiles" -B '${{github.workspace}}'/build
#       - name: Configure CMake
#         run: cmake '${{github.workspace}}'

#       - name: Build
#         run: cmake --build '${{github.workspace}}' --target RePr

      
#       - name: Create build foder 
#         if: startsWith(matrix.os, 'windows')
#         run: mkdir ${{github.workspace}}\build
        
        
#         cmake -DCMAKE_BUILD_TYPE=Release ..
#qmake CONFIG+=release -r '${{github.workspace}}\Interrogator.pro' 
 #             cmake -DCMAKE_BUILD_TYPE=Release
  #            make
              
      - name: Build
        if: startsWith(matrix.os, 'windows')
        env:
          ACTIONS_RUNNER_DEBUG: true
          ACTIONS_STEP_DEBUG: true
        working-directory: ${{github.workspace}}
        run:  |
              make clean
              qmake -config release
              make release
              dir '${{github.workspace}}\build'
              dir '${{github.workspace}}'
              dir '${{github.workspace}}\debug'
              dir '${{github.workspace}}\release'
              
#       - name: Build
#         if: startsWith(matrix.os, 'windows')
#         env:
#           ACTIONS_RUNNER_DEBUG: true
#           ACTIONS_STEP_DEBUG: true
#         working-directory: ${{github.workspace}}\build
#         run:  |
#               qmake CONFIG+=release -r '${{github.workspace}}\Interrogator.pro' 
#               cmake -DCMAKE_BUILD_TYPE=Release
#               make
#               dir '${{github.workspace}}\build'
#               dir '${{github.workspace}}'
              
      - name: Create build foder 
        if: (!startsWith(matrix.os, 'windows'))
        run: mkdir ${{github.workspace}}/build
        
        
      - name: Build
        if: startsWith(matrix.os, 'linux')
        env:
          ACTIONS_RUNNER_DEBUG: true
          ACTIONS_STEP_DEBUG: true
        working-directory: ${{github.workspace}}
        run:  |
              qmake CONFIG+=release
              make
              
      - name: Build
        if: startsWith(matrix.os, 'mac')
        env:
          ACTIONS_RUNNER_DEBUG: true
          ACTIONS_STEP_DEBUG: true
        working-directory: ${{github.workspace}}
        run:  |
              qmake CONFIG+=release
              make

              
#       - uses: montudor/action-zip@v1
#         with:
#           args: zip -qq -r interrogator.zip ${{github.workspace}}
              
              
#       - name: Tar files
#         if: startsWith(matrix.os, 'windows')
#         run: tar -cvf interrogator.tar ${{github.workspace}}\build
        
#       - name: Tar files
#         if: (!startsWith(matrix.os, 'windows'))
#         run: tar -cvf interrogator.tar ${{github.workspace}}/build

      - name: Upload Artifact ${{github.os}}
        if: startsWith(matrix.os, 'mac')
        uses: actions/upload-artifact@v3
        with:
          name: Interrogator.app
          path: |
            Interrogator.app
            
      - name: Upload Artifact ${{github.os}}
        if: startsWith(matrix.os, 'linux')
        uses: actions/upload-artifact@v3
        with:
          name: Interrogator
          path: |
            Interrogator

      - name: Upload Artifact ${{github.os}}
        if: startsWith(matrix.os, 'windows')
        uses: actions/upload-artifact@v3
        with:
          name: Interrogator.exe
          path: |
            Interrogator.exe
